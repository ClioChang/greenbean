<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--suppress SqlDialectInspection, SqlNoDataSourceInspection -->
<mapper namespace="com.clio.greenbean.mybatis.mapper.BookMapper">
    <cache type="org.mybatis.caches.ehcache.EhcacheCache">
        <property name="timeToIdleSeconds" value="3600"/>
        <property name="timeToLiveSeconds" value="3600"/>
        <property name="maxEntriesLocalHeap" value="1000"/>
        <property name="maxEntriesLocalDisk" value="10000000"/>
        <property name="memoryStoreEvictionPolicy" value="LRU"/>
    </cache>

    <resultMap id="getAuthorsAndTranslators" type="com.clio.greenbean.domain.Book">
        <id property="id" column="id"></id>
        <result property="name" column="name"></result>
        <result property="isbn" column="isbn"></result>
        <result property="picture" column="picture"></result>
        <result property="publisher" column="publisher"></result>
        <result property="publishYear" column="publish_year"></result>
        <result property="publishMonth" column="publish_month"></result>
        <result property="publishDay" column="publish_day"></result>
        <result property="price" column="price"></result>
        <result property="subtitle" column="subtitle"></result>
        <result property="originalName" column="original_name"></result>
        <result property="binding" column="binding"></result>
        <result property="page" column="page"></result>
        <result property="contentIntro" column="content_intro"></result>
        <result property="authorIntro" column="author_intro"></result>
        <result property="directory" column="directory"></result>
        
        <collection property="authors" javaType="java.util.List" ofType="com.clio.greenbean.domain.Author">
            <id property="id" column="author_id"></id>
            <result property="name" column="author_name"></result>
        </collection>
        <collection property="translators" javaType="java.util.List" ofType="com.clio.greenbean.domain.Translator">
            <id property="id" column="translator_id"></id>
            <result property="name" column="translator_name"></result>
        </collection>
    </resultMap>
    
    <select id="getBooksBaseInfoByID" resultMap="getAuthorsAndTranslators">
        select * from v_book_author_translator where id = #{id};
    </select>

    <select id="getAuthorByID" resultType="com.clio.greenbean.domain.Author">
        select author_name name from v_book_author where book_id = #{id}
    </select>

    <select id="getTranslatorByID" resultType="com.clio.greenbean.domain.Translator">
        select translator_name name from v_book_translator where book_id = #{id}
    </select>

    <select id="getRatingAndRatingCountByID" resultType="java.util.Map">
        select count(*) as ratingCount,avg(score) as rating from t_book_user where book_id = #{id} and score is not null
    </select>
    <!--XXX 上下这两个语句可合成一句 -->
    <select id="getScoreAndRatingCountGroupByScore" resultType="java.util.Map">
        select score,count(*) as ratingCount from t_book_user where book_id = #{id} and score is not null group by score
    </select>

    <!-- XXX 有没更好的写法 -->
    <select id="getSearchBooksWithPagination" resultType="java.util.Map">
        <bind name="searchKeyword" value="'%' + keyword + '%'" />
        select distinct book_id as id from v_book_author where book_name like #{searchKeyword} or author_name like #{searchKeyword} or book_isbn = #{keyword} limit #{start},#{size}
    </select>

    <select id="getSearchBooksCount" resultType="java.lang.Integer">
        <bind name="searchKeyword" value="'%' + keyword + '%'" />
        select count(distinct book_id) as count from v_book_author where book_name like #{searchKeyword} or author_name like #{searchKeyword} or book_isbn = #{keyword}
    </select>

    <insert id="insertBookBasicInfo">
        <selectKey keyProperty="id" order="AFTER" resultType="int">select last_insert_id()</selectKey>
        insert into t_book (name, isbn, price, publisher, publish_year, publish_month, publish_day, subtitle, original_name, binding, page, content_intro, author_intro, directory) values(#{name},#{isbn},#{price},#{publisher},#{publishYear},#{publishMonth},#{publishDay},#{subtitle},#{originalName},#{binding},#{page},#{contentIntro},#{authorIntro},#{directory})
    </insert>

    <insert id="insertBookAuthor">
        insert into t_book_author (book_id,author_id) values
        <foreach item="value" collection="author" separator=",">
            (#{bookId},#{value})
        </foreach>
    </insert>

    <insert id="insertBookTranslator">
        insert into t_book_translator (book_id,translator_id) values
        <foreach item="value" collection="translator" separator=",">
            (#{bookId},#{value})
        </foreach>
    </insert>

    <select id="getAuthorSuggestion" resultType="java.lang.String">
        <bind name="suggestion" value="'%' + authorSuggestion + '%'" />
        select name from t_author where name like #{suggestion}
    </select>

    <select id="getTranslatorSuggestion" resultType="java.lang.String">
        <bind name="suggestion" value="'%' + translatorSuggestion + '%'" />
        select name from t_translator where name like #{suggestion}
    </select>

    <select id="getAuthorIdByName" resultType="java.lang.Integer">
        select id from t_author where name = #{authorName}
    </select>
    
    <select id="getTranslatorIdByName" resultType="java.lang.Integer">
        select id from t_translator where name = #{translatorName}
    </select>
    
    <insert id="insertAuthorByName">
        <selectKey keyProperty="id" order="AFTER" resultType="int">select last_insert_id()</selectKey>
        insert into t_author (name) values(#{name})
    </insert>
    
    <insert id="insertTranslatorByName">
        <selectKey keyProperty="id" order="AFTER" resultType="int">select last_insert_id()</selectKey>
        insert into t_translator (name) values(#{name})
    </insert>
    
    <insert id="insertUserRating">
        insert into t_book_user (book_id, user_id, type, score, time) values(#{bookId}, #{userId}, #{type}, #{score}, now())
    </insert>
    
    <select id="getUserRatingCount" resultType="java.lang.Integer">
        select count(*) from t_book_user where book_id = #{bookId} and user_id = #{userId}
    </select>
    
    <select id="getBookUserRatingsByBookIdAndUserId" resultType="java.util.Map">
        select type, score, time from t_book_user where book_id = #{bookId} and user_id = #{userId}
    </select>
</mapper>